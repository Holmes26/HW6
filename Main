package org.example.HwFinal;

import java.util.List;
import java.util.Scanner;

/**
 * • Подумать над структурой класса Ноутбук для магазина техники - выделить поля и методы. Реализовать в java.
 * • Создать множество ноутбуков.
 * • Написать метод, который будет запрашивать у пользователя критерий (или критерии) фильтрации и выведет ноутбуки,
 * отвечающие фильтру. Критерии фильтрации можно хранить в Map. Например:
 * “Введите цифру, соответствующую необходимому критерию:
 * 1 - ОЗУ
 * 2 - Объем ЖД
 * 3 - Операционная система
 * 4 - Цвет …
 * • Далее нужно запросить минимальные значения для указанных критериев - сохранить параметры фильтрации можно также в Map.
 * • Отфильтровать ноутбуки их первоначального множества и вывести проходящие по условиям.
 */
public class Main {
      public static void main(String[] args) {
        Laptop HuaweiMateBook = new Laptop("HUAWEI", "MateBook", "16", "512", "Windows", "Black");
        Laptop MSIgf76 = new Laptop("MSI", "GF76", "8", "256", "Windows", "Silver");
        Laptop AppleMacBookAir = new Laptop("Apple", "Air", "8", "256", "macOS", "Gold");
        Laptop AppleMacBookPro = new Laptop("Aplle", "Pro", "16", "1024", "macOS", "Silver");
        Laptop AsusVivoBook = new Laptop("ASUS", "VivoBook", "16", "512", "Windows", "Blue");
        Laptop HonorMagicBook = new Laptop("Honor", "MagicBook", "8", "512", "Windows", "Gray");
        List<Laptop> notebookList = List.of(HuaweiMateBook, AppleMacBookAir, MSIgf76, AppleMacBookPro, AsusVivoBook, HonorMagicBook);

        Scanner scannerUser = new Scanner(System.in);
        System.out.println("Выберите параметр для поиска, где:\n1 - объем ОЗУ\n2 - объем ЖД\n3 - Операционная система\n4 - Цвет ноутбука                                                                                ");
        int choiceUserSearch = scannerUser.nextInt();
        Scanner scannerRequestUserForSearch = new Scanner(System.in);
        System.out.println("Напишите интересующий вас параметр: ");
        String requestUserForSearch = scannerRequestUserForSearch.nextLine();
        scannerUser.close();
        scannerRequestUserForSearch.close();

        if  (choiceUserSearch == 1) {
            for (Laptop RAM: notebookList) {
                if (RAM.getRAM().equalsIgnoreCase(requestUserForSearch)){
                    System.out.println(RAM.printInfo());
                }
            }
        }
        else if (choiceUserSearch == 2){
            for (Laptop hardDisk: notebookList) {
                if (hardDisk.getHardDisk().equalsIgnoreCase(requestUserForSearch)) {
                    System.out.println(hardDisk.printInfo());
                }
            }
        }
        else if (choiceUserSearch == 3){
            for (Laptop OS : notebookList) {
                if (OS.getOS().equalsIgnoreCase(requestUserForSearch)) {
                    System.out.println(OS.printInfo());
                }
            }
        }
        else if (choiceUserSearch == 4){
            for (Laptop color : notebookList) {
                if (color.getColor().equalsIgnoreCase(requestUserForSearch)) {
                    System.out.println(color.printInfo());
                }
            }
        }
        else {
            System.out.println("Ошибка.\nВыберите параметр для поиска, где:\n1 - Объем ОЗУ\n2 - Объем ЖД\n3 - Операционная система\n4 - Цвет");
        }
    }
}
